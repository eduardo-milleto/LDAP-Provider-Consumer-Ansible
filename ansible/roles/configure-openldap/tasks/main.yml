# Verificação inicial da instalação do LDAP

- name: Obter informações sobre os pacotes já instalados
  package_facts:
    manager: auto

- name: Verificar se LDAP já está instalado
  block:
    - name: Mostrar mensagem de pacote já instalado
      debug:
        msg: "O pacote LDAP já está instalado."
      when: "'slapd ldap-utils' in ansible_facts.packages"

# Configuração inicial dos parametros do LDAP

- name: Configuração LDAP
  shell: |
    debconf-set-selections <<-EOF
    slapd slapd/internal/generated_adminpw password {{ ldap_user_pass }}
    slapd slapd/internal/adminpw password {{ ldap_user_pass }}
    slapd slapd/password2 password {{ ldap_user_pass }}
    slapd slapd/password1 password {{ ldap_user_pass }}
    slapd slapd/invalid_config boolean true
    slapd slapd/move_old_database boolean true
    slapd slapd/purge_database boolean false
    slapd slapd/no_configuration boolean false
    slapd slapd/domain string ufrgs.br
    slapd shared/organization string Universidade Federal do Rio Grande do Sul
    slapd slapd/dump_database_destdir string /var/backups/slapd-VERSION
    slapd slapd/dump_database select when needed
    EOF
    export DEBIAN_FRONTEND=noninteractive
  become: true
  become_user: root

# instalação do LDAP, caso ele não esteja instalado

- name: Instalar OpenLDAP
  package:
    name: 
      - slapd 
      - ldap-utils
    state: present
  when: "'slapd ldap-utils' not in ansible_facts.packages"
  become: true
  become_user: root


# Criação de diretórios

- name: Criar o diretório "ufrgs-openldap"
  file:
    path: /tmp/ufrgs-openldap
    state: directory
    owner: root
    group: root
  become: true
  become_user: root

- name: Criar o diretório "templates"
  file:
    path: /tmp/ufrgs-openldap/templates
    state: directory
    owner: root
    group: root
  become: true
  become_user: root

# Transferência dos arquivos da pasta "files" do "configure-openldap"

- copy:
    src: "{{ item }}"
    dest: /tmp/ufrgs-openldap/files_configuration/
    owner: root
    mode: 600
  with_fileglob:
    - "files/*"
  become: true
  become_user: root

# Templates nos arquivos do "configure-openldap"

- name: Gerar arquivo "admin.ldif"
  ansible.builtin.template:
    src: templates/admin.ldif.j2
    dest: /tmp/ufrgs-openldap/templates/admin.ldif
    owner: root
    group: wheel
    mode: '0644'
  become: true
  become_user: root

- name: Gerar arquivo "replicator.ldif"
  ansible.builtin.template:
    src: templates/replicator.ldif.j2
    dest: /tmp/ufrgs-openldap/templates/replicator.ldif
    owner: root
    group: wheel
    mode: '0644'
  become: true
  become_user: root

- name: Gerar arquivo "replicator_config.ldif"
  ansible.builtin.template:
    src: templates/replicator_config.ldif.j2
    dest: /tmp/ufrgs-openldap/templates/replicator_config.ldif
    owner: root
    group: wheel
    mode: '0644'
  become: true
  become_user: root

- name: Gerar arquivo "replicator_config2.ldif"
  ansible.builtin.template:
    src: templates/replicator_config2.ldif.j2
    dest: /tmp/ufrgs-openldap/templates/replicator_config2.ldif
    owner: root
    group: wheel
    mode: '0644'
  become: true
  become_user: root

# Adição dos arquivos dos templates do "configure-openldap"

- name: Adicionar o arquivo "admin.ldif"
  command: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/ufrgs-openldap/templates/admin.ldif
  become: true
  become_user: root

- name: Importar arquivo "replicator.ldif" - criar usuário replicator
  command: ldapadd -x -D 'cn=admin,dc=ufrgs,dc=br' -w '{{ ldap_user_pass }}' -H ldapi:/// -f /tmp/ufrgs-openldap/templates/replicator.ldif
  become: true
  become_user: root

- name: Adicionar o arquivo "replicator_config.ldif"
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/ufrgs-openldap/templates/replicator_config.ldif"
  become: true
  become_user: root

- name: Adicionar o arquivo "replicator_config2.ldif"
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/ufrgs-openldap/templates/replicator_config2.ldif"
  become: true
  become_user: root

  # Adicionar todos os schemas e arquivos padrões para o LDAP

- name: Importar arquivo "change_DbMaxSize.ldif" - altera o tamanho máximo da base
  command: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/ufrgs-openldap/files_configuration/change-DbMaxSize.ldif
  become: true
  become_user: root

- name: Importar arquivo "change-LogLevel.ldif" - define nivel de log
  command: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/ufrgs-openldap/files_configuration/change-LogLevel.ldif
  become: true
  become_user: root

- name: Importar arquivo "misc.ldif" - importar schema misc
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/misc.ldif"
  become: true
  become_user: root

- name: Importar arquivo "schema-eduperson.ldif" - importar schema eduperson
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/ufrgs-openldap/files_configuration/schema-eduperson.ldif"
  become: true
  become_user: root

- name: Importar arquivo "schema-ufrgs.ldif" - importar schema ufrgs
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/ufrgs-openldap/files_configuration/schema-ufrgs.ldif"
  become: true
  become_user: root

- name: Importar arquivo "schema-authldap.ldif" - importar schema authldap
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/ufrgs-openldap/files_configuration/schema-authldap.ldif"
  become: true
  become_user: root

- name: Importar arquivo "schema-samba.ldif" - importar schema samba
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/ufrgs-openldap/files_configuration/schema-samba.ldif"
  become: true
  become_user: root

- name: Importar arquivo "schema-ufrgsGrupo.ldif" - importar schema ufrgsGrupo
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/ufrgs-openldap/files_configuration/schema-ufrgsGrupo.ldif"
  become: true
  become_user: root

- name: Importar arquivo "create-indexes.ldif" - criar indices
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/ufrgs-openldap/files_configuration/create-indexes.ldif"
  become: true
  become_user: root

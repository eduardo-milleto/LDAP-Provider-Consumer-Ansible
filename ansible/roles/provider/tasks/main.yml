# Criação do diretório "accesslog"

- name: Crie o diretório "accesslog"
  file:
    path: /var/lib/ldap/accesslog
    state: directory
    owner: openldap
    group: openldap
  become: true
  become_user: root

# Transferência de todos os arquivos da pasta "files" do "provider"

- copy:
    src: "{{ item }}"
    dest: /tmp/files_configuration/
    owner: root
    mode: 644
  with_fileglob:
    - "files/*"
  become: true
  become_user: root

# Templates e adição dos arquivos da pasta "templates" do "provider"

- name: Verificar se a configuração de "módulos" já existe
  command: ldapsearch -x -LLL -D 'cn=admin,cn=config' -w '{{ ldap_user_pass }}' -H ldapi:/// -b 'cn=config' '(cn=module{1})' 
  register: ldap_modules_check
  become: true
  become_user: root

- name: Importar o arquivo "provider_active_modules.ldif" - habilita os módulos
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/files_configuration/provider-active-modules.ldif"
  when: ldap_modules_check.stdout == ""
  become: true
  become_user: root

- name: Gerar arquivo "create_accesslog.ldif"
  ansible.builtin.template:
    src: templates/create_accesslog.ldif.j2
    dest: /tmp/templates/create_accesslog.ldif
    owner: root
    group: wheel
    mode: 644
  become: true
  become_user: root

- name: Importar "create_accesslog.ldif" - criar database accesslog
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/templates/create_accesslog.ldif"
  when: ldap_modules_check.stdout == ""
  become: true
  become_user: root

- name: Gerar arquivo "overlay_sync.ldif"
  ansible.builtin.template:
    src: templates/overlay_sync.ldif.j2
    dest: /tmp/templates/overlay_sync.ldif
    owner: root
    group: wheel
    mode: '0644'
  become: true
  become_user: root

- name: Verificar se o overlay "sync" já existe
  command: ldapsearch -x -LLL -D 'cn=admin,cn=config' -w '{{ ldap_user_pass }}' -H ldapi:/// -b 'cn=config' '(olcOverlay={1}syncprov)'
  register: ldap_sync_check
  become: true
  become_user: root

- name: Importar "overlay_sync.ldif" - habilita overlay syncprov
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/templates/overlay_sync.ldif"
  when: ldap_sync_check.stdout == ""
  become: true
  become_user: root

- name: Gerar arquivo "overlay_accesslog.ldif"
  ansible.builtin.template:
    src: templates/overlay_accesslog.ldif.j2
    dest: /tmp/templates/overlay_accesslog.ldif
    owner: root
    group: wheel
    mode: '0644'
  become: true
  become_user: root

- name: Verificar se o overlay "overlay_accesslog" já existe
  command: ldapsearch -x -LLL -D 'cn=admin,cn=config' -w '{{ ldap_user_pass }}' -H ldapi:/// -b 'cn=config' '(olcOverlay={1}accesslog)'
  register: ldap_accesslog_check
  become: true
  become_user: root

- name: Importar "overlay_accesslog.ldif" - habilita overlay accesslog 
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/templates/overlay_accesslog.ldif"
  when: ldap_accesslog_check.stdout == ""
  become: true
  become_user: root

- name: Gerar arquivo "overlay_sync_accesslog.ldif"
  ansible.builtin.template:
    src: templates/overlay_sync_accesslog.ldif.j2
    dest: /tmp/templates/overlay_sync_accesslog.ldif
    owner: root
    group: wheel
    mode: '0644'
  become: true
  become_user: root

- name: Verificar se o overlay "sync_accesslog" já existe
  command: ldapsearch -x -LLL -D 'cn=admin,cn=config' -w '123' -H ldapi:/// -b 'olcDatabase={2}mdb,cn=config' '(olcOverlay={0}syncprov)' 
  register: ldap_sync_accesslog_check
  become: true
  become_user: root

- name: Importar "overlay_sync_accesslog.ldif" - habilita overlay syncprov na database accesslog
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/templates/overlay_sync_accesslog.ldif"
  when: ldap_sync_accesslog_check.stdout == ""
  become: true
  become_user: root
